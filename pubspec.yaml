name: flutter_template
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.4.4 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  intl: ^0.19.0

  # Dependency Injection
  get_it: ^7.6.7

  # UI Related
  animate_do: 3.3.4
  animations: ^2.0.7
  flutter_svg: ^2.0.10+1
  google_fonts: ^6.2.1
  flutter_screenutil: ^5.6.0
  cached_network_image: ^3.4.0
  flutter_staggered_grid_view: ^0.6.2

  # HTTP Client
  dio_smart_retry: ^6.0.0
  dio: ^5.4.1
  connectivity_plus: ^6.0.3

  # State Management
  dartz: ^0.10.1
  bloc: ^8.1.4
  flutter_bloc: ^8.1.5
  equatable: ^2.0.5

  # Storage
  shared_preferences: ^2.0.16

  # Device Info
  package_info_plus: ^8.1.3

  # Model
  json_annotation: ^4.9.0
  freezed_annotation: ^2.4.4

  # Routing
  auto_route: ^9.3.0+1

  # Additional
  image_picker: ^1.1.0
  logger: ^2.1.0
  flutter_launcher_icons: 0.13.1

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^3.0.0
  json_serializable: ^6.8.0
  freezed: ^2.4.6
  build_runner: ^2.4.7
  auto_route_generator: ^9.3.1
  change_app_package_name: ^1.4.0

flutter_launcher_icons:
  android: "launcher_icon"
  ios: true
  image_path: "assets/images/logo_full.png"
# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec
flutter_gen:
  output: lib/gen/ # Optional (default: lib/gen/)
  line_length: 80 # Optional (default: 80)
  integrations:
    flutter_svg: true
# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/icons/
    - assets/images/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
fonts:
  - family: Poppins
    fonts:
      - asset: google_fonts/Poppins-Thin.ttf
        weight: 100
      - asset: google_fonts/Poppins-ExtraLight.ttf
        weight: 200
      - asset: google_fonts/Poppins-Light.ttf
        weight: 300
      - asset: google_fonts/Poppins-Regular.ttf
        weight: 400
      - asset: google_fonts/Poppins-Medium.ttf
        weight: 500
      - asset: google_fonts/Poppins-SemiBold.ttf
        weight: 600
      - asset: google_fonts/Poppins-Bold.ttf
        weight: 700
      - asset: google_fonts/Poppins-ExtraBold.ttf
        weight: 800
      - asset: google_fonts/Poppins-Black.ttf
        weight: 900
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
